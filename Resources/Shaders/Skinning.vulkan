
{{vertex}}

#version 450

layout(binding=0) uniform VertexUniforms {
    mat4 modelMatrix;
    mat4 viewMatrix;
    mat4 projectionMatrix;
    mat3 normalMatrix;
    vec3 lightPosition;
} vertexUniforms;

layout(location=0) in vec3 in_position;
layout(location=1) in vec3 in_normal;
layout(location=2) in vec3 in_tangent;
layout(location=3) in vec3 in_bitangent;
layout(location=4) in vec2 in_texCoord;
layout(location=5) in vec4 in_boneWeights;
layout(location=6) in uvec4 in_boneIndices;

layout(location=0) out vec2 out_texCoord;

void main()
{
    mat4 viewProjectionMatrix = vertexUniforms.projectionMatrix * vertexUniforms.viewMatrix * vertexUniforms.modelMatrix;

    // FIXME
    //mat4 boneTransform = matrices[in_boneIndices.x] * in_boneWeights.x;
    //boneTransform += matrices[in_boneIndices.y] * in_boneWeights.y;
    //boneTransform += matrices[in_boneIndices.z] * in_boneWeights.z;
    //boneTransform += matrices[in_boneIndices.w] * in_boneWeights.w;
    mat4 boneTransform = mat4(1.0, 0.0, 0.0, 0.0,
        0.0, 1.0, 0.0, 0.0,
        0.0, 0.0, 1.0, 0.0,
        0.0, 0.0, 0.0, 1.0);

    gl_Position = viewProjectionMatrix * boneTransform * vec4(in_position, 1.0);
    out_texCoord = in_texCoord;
}


{{fragment}}

#version 450

layout(binding=1) uniform sampler2D textureSampler;

layout(location=0) in vec2 in_texCoord;

layout(location=0) out vec4 out_color;

void main()
{
    out_color = texture(textureSampler, in_texCoord);
}
